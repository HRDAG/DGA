// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// computeLogPostProbs
arma::mat computeLogPostProbs(const arma::mat& compMat, const Rcpp::List& graphs, const arma::rowvec& denominator, int p);
RcppExport SEXP _dga_computeLogPostProbs(SEXP compMatSEXP, SEXP graphsSEXP, SEXP denominatorSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type compMat(compMatSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type graphs(graphsSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type denominator(denominatorSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(computeLogPostProbs(compMat, graphs, denominator, p));
    return rcpp_result_gen;
END_RCPP
}
// rowAdd
void rowAdd(arma::mat& mat, const arma::rowvec& v);
RcppExport SEXP _dga_rowAdd(SEXP matSEXP, SEXP vSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type mat(matSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type v(vSEXP);
    rowAdd(mat, v);
    return R_NilValue;
END_RCPP
}
// colAdd
void colAdd(arma::mat& mat, const arma::colvec& v);
RcppExport SEXP _dga_colAdd(SEXP matSEXP, SEXP vSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type mat(matSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type v(vSEXP);
    colAdd(mat, v);
    return R_NilValue;
END_RCPP
}
// expNormalize
void expNormalize(arma::mat& mat);
RcppExport SEXP _dga_expNormalize(SEXP matSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type mat(matSEXP);
    expNormalize(mat);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_dga_computeLogPostProbs", (DL_FUNC) &_dga_computeLogPostProbs, 4},
    {"_dga_rowAdd", (DL_FUNC) &_dga_rowAdd, 2},
    {"_dga_colAdd", (DL_FUNC) &_dga_colAdd, 2},
    {"_dga_expNormalize", (DL_FUNC) &_dga_expNormalize, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_dga(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
